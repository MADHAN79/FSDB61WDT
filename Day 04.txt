JavaScript - Day -4: Functions
21/06/2024 - Friday - 6:00 PM : 9:00 PM


<!DOCTYPE html>
<html>
<body>

<script>

//>>>>>>>>>>>>
// 1. Do the below programs in anonymous function & IIFE
//<<<<<<<<<<<<

//=========================================================
//++++++++++ a. Print odd numbers in an array +++++++++++++
//=========================================================

//anonymous
    let arr = [3,6,9,4,8,6,7,2];

    let newarr = [];
    let result = function(arr)  {
        for(i=0;i<arr.length;i++){
            if (arr[i] % 2 !== 0) {
            newarr.push(arr[i]);
        }
    }
    return newarr;
};

console.log("Qn.1 a:");
console.log("Odd numbers using anonymous function:",result(arr)); 

//iife
(function(arr) 
    {
        let newarr = [];
        for (let i = 0; i < arr.length; i++) {
            if (arr[i] % 2 !== 0) {
                newarr.push(arr[i]);
            }
        }
        console.log("Odd numbers using IIFE function:",newarr);
    })(arr);

   console.log("");//Printing empty line for neat output screenshot

//===============================================================================
//++++++++ b. Convert all the strings to title caps in a string array +++++++++++
//===============================================================================

    let strArr = ["guvi world", "zenclass is fun", "full stack developer"];

//anonymous
    let toTitleCase = function(arr) {
        return arr.map(str => {
            return str.split(' ').map(word => {
                return word.charAt(0).toUpperCase() + word.slice(1).toLowerCase();
            }).join(' ');
        });
    };
    
    let titleCaseArr = toTitleCase(strArr);
    console.log("Qn.1 b:");
    console.log("Title caps using anonymous function:",titleCaseArr);
    
//iife
    let titleCaseArr_ = (function(arr) {
        return arr.map(str => {
            return str.split(' ').map(word => {
                return word.charAt(0).toUpperCase() + word.slice(1).toLowerCase();
            }).join(' ');
        });
    })(strArr);
    
    console.log("Title caps using IIFE function:",titleCaseArr_);

    console.log("");//Printing empty line for neat output screenshot

//=======================================================
//+++++++++++ c. Sum of all numbers in an array +++++++++
//=======================================================

//anonymous
    let numArr = [3, 6, 9, 4, 8, 6, 7, 2];

    let sumArray = function(arr) {
        return arr.reduce((acc, num) => acc + num, 0);
    };
    
    let sum = sumArray(numArr);
    console.log("Qn.1 c:");
    console.log("Sum array elements using anonymous function:",sum); 
    
//iife
    let sum_ = (function(arr) {
        return arr.reduce((acc, num) => acc + num, 0);
    })(numArr);

    console.log("Sum array elements using IIFE function:",sum_); 
    
    console.log("");//Printing empty line for neat output screenshot

//=============================================================
//+++++++ d. Return all the prime numbers in an array +++++++++
//=============================================================

//logic for both:
let isPrime = function(num) {
    if (num <= 1) return false;
    if (num <= 3) return true;
    if (num % 2 === 0 || num % 3 === 0) return false;
    for (let i = 5; i * i <= num; i += 6) {
        if (num % i === 0 || num % (i + 2) === 0) return false;
    }
    return true;
};

//anonymous
    let getPrimes = function(arr) {
        return arr.filter(isPrime);
    };

    let primes = getPrimes(numArr);
    console.log("Qn.1 d:");
    console.log("Prime numbers using anonymous function:",primes);
        
//iife
    let primes_ = (function(arr) {
        return arr.filter(isPrime);
    })(numArr);

    console.log("Prime numbers using IIFE function:",primes_);

    console.log("");//Printing empty line for neat output screenshot

//==============================================================    
//++++++++++ e. Return all the palindromes in an array +++++++++
//==============================================================

//logic for both:
    let isPalindrome = function(str) {
        let cleanedStr = str.toLowerCase().replace(/[^a-z0-9]/g, '');
        let reversedStr = cleanedStr.split('').reverse().join('');
        return cleanedStr === reversedStr;
    };
    
//anonymous
    let palindromeArr = ["zenclass", "Guvi", "malayalam", "madam", "palindrome", "level", "racecar"];

    let getPalindromes = function(arr) {
        return arr.filter(isPalindrome);
    };

    let palindromes = getPalindromes(palindromeArr);
    console.log("Qn.1 e:");
    console.log("Palindrome elements using anonymous function:",palindromes);

//iife
    let palindromes_ = (function(arr) {
        return arr.filter(isPalindrome);
    })(palindromeArr);

    console.log("Palindrome elements using IIFE function:",palindromes_); 

    console.log("");//Printing empty line for neat output screenshot

//===========================================================================    
//++++++++++ f. Return median of two sorted arrays of the same size +++++++++
//===========================================================================

let arr1 = [1, 3, 5];
let arr2 = [2, 4, 6];

//anonymous
    let findMedian = function(arr1, arr2) {
        let mergedArr = [...arr1, ...arr2].sort((a, b) => a - b);
        let mid = mergedArr.length / 2;
        if (mergedArr.length % 2 === 0) {
            return (mergedArr[mid - 1] + mergedArr[mid]) / 2;
        } else {
            return mergedArr[Math.floor(mid)];
        }
    };

    let median = findMedian(arr1, arr2);
    console.log("Qn.1 f:");
    console.log("Median using anonymous function:",median); 

//iife
    let median_ = (function(arr1, arr2) {
        let mergedArr = [...arr1, ...arr2].sort((a, b) => a - b);
        let mid = mergedArr.length / 2;
        if (mergedArr.length % 2 === 0) {
            return (mergedArr[mid - 1] + mergedArr[mid]) / 2;
        } else {
            return mergedArr[Math.floor(mid)];
        }
    })(arr1, arr2);

    console.log("Median using IIFE function:",median_); 

    console.log("");//Printing empty line for neat output screenshot

//=======================================================   
//++++++++++ g. Remove duplicates from an array +++++++++
//=======================================================

//anonymous
    let dup_arr = [1, 2, 3, 4, 3, 2, 1, 5, 6, 7, 6];
    let removeDuplicates = function(dup_arr) {
        return [...new Set(dup_arr)];
    };

    let uniqueArr = removeDuplicates(dup_arr);
    console.log("Qn.1 g:");
    console.log("Removing duplicates using anonymous function:",uniqueArr); 

//iife
    let uniqueArr_ = (function(dup_arr) {
        return [...new Set(dup_arr)];
    })(dup_arr);
    
    console.log("Removing duplicates using IIFE function:",uniqueArr_); 

    console.log("");//Printing empty line for neat output screenshot
    
//==================================================    
//++++++++++ h. Rotate an array by k times +++++++++
//==================================================

//anonymous
    let rot_arr = [1, 2, 3, 4, 5, 6, 7];
    let k = 3;

    let rotateArray = function(rot_arr, k) {
        k = k % rot_arr.length;
        return rot_arr.slice(-k).concat(rot_arr.slice(0, -k));
    };

    let rotatedArr = rotateArray(rot_arr, k);
    console.log("Qn.1 h:");
    console.log("Rotate array using anonymous function:",rotatedArr);

//iife
    let rotatedArr_ = (function(rot_arr, k) {
        k = k % arr.length;
        return rot_arr.slice(-k).concat(rot_arr.slice(0, -k));
    })(rot_arr, k);

    console.log("Rotate array using IIFE function:",rotatedArr_);

    console.log("");//Printing empty line for neat output screenshot

//-----------------------------------------------------------

//>>>>>>>>>>>>
// 2. Do the below programs in ARROW functions.
//<<<<<<<<<<<<

//=====================================================    
//++++++++++ a. Print odd numbers in an array +++++++++
//=====================================================

    let ODD_arr = [3, 6, 9, 4, 8, 6, 7, 2];
    let ODDnew_arr = [];
    let printOddNumbers = ODD_arr => {
        ODD_arr.filter(num => num % 2 !== 0).forEach(oddNum => ODDnew_arr.push(oddNum));
    };

    printOddNumbers(ODD_arr);
    
    console.log("Qn.2 a:");
    console.log("Odd numbers using ARROW function:",ODDnew_arr);

    console.log("");//Printing empty line for neat output screenshot

//===============================================================================
//++++++++++ b. Convert all the strings to title caps in a string array +++++++++
//===============================================================================

    let TitleArr = ["guvi world", "zenclass is fun", "full stack developer"];

    let convertToTitleCaps = arr => {
        return arr.map(str => {
            return str.split(' ').map(word => {
                return word.charAt(0).toUpperCase() + word.slice(1).toLowerCase();
            }).join(' ');
        });
    };

    let titleCapsArr = convertToTitleCaps(TitleArr);
    
    console.log("Qn.2 b:");
    console.log("Title caps using ARROW function:",titleCapsArr);

    console.log("");//Printing empty line for neat output screenshot

//======================================================
//++++++++++ c. Sum of all numbers in an array +++++++++
//======================================================

    let sum_all = [3, 6, 9, 4, 8, 6, 7, 2];

    let sum_Array = arr => {
        return sum_all.reduce((acc, num) => acc + num, 0);
    };

    let output_sum = sum_Array(sum_all);

    console.log("Qn.2 c:");
    console.log("Sum array elements using ARROW function:",output_sum);

    console.log("");//Printing empty line for neat output screenshot

//================================================================
//++++++++++ d. Return all the prime numbers in an array +++++++++
//================================================================

    let checkPrime = [22, 4, 77, 11, 13, 13, 19, 29, 3, 6, 16, 29] ;

    let isPrime_ = num => {
        if (num <= 1) return false;
        if (num <= 3) return true;
        if (num % 2 === 0 || num % 3 === 0) return false;
        for (let i = 5; i * i <= num; i += 6) {
            if (num % i === 0 || num % (i + 2) === 0) return false;
        }
        return true;
    };

    let getPrimes_ = arr => {
        return checkPrime.filter(num => isPrime_(num));
    };

    let primeNumbers = getPrimes_(checkPrime);

    console.log("Qn.2 d:");
    console.log("Prime numbers using ARROW function:",primeNumbers);

    console.log("");//Printing empty line for neat output screenshot

//==============================================================
//++++++++++ e. Return all the palindromes in an array +++++++++
//==============================================================

    let arrow_palindrome = ["zenclass", "Guvi", "malayalam", "madam", "palindrome", "level", "racecar"];

    let isArrowPalindrome = str => {
        let cleanedStr = str.toLowerCase().replace(/[^a-z0-9]/g, ''); 
        let reversedStr = cleanedStr.split('').reverse().join('');
        return cleanedStr === reversedStr;
    };

    let getArrowPalindromes = arr => {
        return arr.filter(str => isArrowPalindrome(str));
    };

    let Arrowpalindromes = getArrowPalindromes(arrow_palindrome);

    console.log("Qn.2 e:");
    console.log("Palindromes in array using ARROW function:",Arrowpalindromes); 

</script>
</body>
</html>
